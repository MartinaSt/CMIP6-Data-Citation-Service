# checks for cmip6-cite MD
# 1. contact_type and related_unit: person/institute
IS_PERSON:select distinct case when (r.person_id>0 and ct.isperson='N') THEN ct.contact_type_name||' (contact_type_id='||ct.contact_type_id||'): not applicable for persons (related_unit_id='||r.related_unit_id||'; related_unit_name_id='||n.related_unit_name_id||'; citation_id='||l.citation_id||'; list_connect.upd_by='||l.upd_by||')' when (r.institute_id>0 and ct.isinstitute='N') THEN ct.contact_type_name||' (contact_type_id='||ct.contact_type_id||'): not applicable for institutes (related_unit_id='||r.related_unit_id||'; related_unit_name_id='||n.related_unit_name_id||'; citation_id='||l.citation_id||'; list_connect.upd_by='||l.upd_by||')' END AS err_contact_type from related_unit r,related_unit_name n, list_connect l,contact_type ct where r.related_unit_name_id=n.related_unit_name_id and n.related_unit_name_id=l.related_unit_name_id and l.contact_type_id=ct.contact_type_id order by err_contact_type
#
# 2. citation entries well-formed: access_spec doi: or http  
DOI_FORMAT:select c.access_spec||': malformed (cera2.citation_id='||r.ref_citation_id||' and citation_id='||r.citation_id||')' from reference r, cera2_upd.upd_citation c where r.ref_citation_id=c.citation_id and c.access_spec not like 'doi:10.%' and c.access_spec not like 'http://%' and c.access_spec not like 'https://%'
#
# 3. multiple lists connected as same contact type to same citation entry.
MULTI_LIST:with x as (select l1.citation_id,l1.contact_type_id,count(*) as counter from list_connect l1 group by l1.citation_id,l1.contact_type_id order by l1.citation_id,l1.contact_type_id) select distinct case when x.counter>1 THEN 'error - '||x.counter||' : '||x.citation_id||', '||x.contact_type_id end as err_contact_types from x
#
# 4. same reference related to citation entry multiple times 
MULTI_REF:with x as (select r1.citation_id,r1.ref_citation_id,count(*) as counter from reference r1 group by r1.citation_id,r1.ref_citation_id order by r1.citation_id,r1.ref_citation_id) select distinct case when x.counter>1 THEN 'error - '||x.counter||' : '||x.citation_id||', '||x.ref_citation_id end as err_mult_references from x
# 5. multi-ORCID / multi-InstID
MULTI_ORCID:select case when count(*)>1 THEN 'error - '||count(*)||' : '||pid.external_id_url end as err_orcid from cera2_upd.upd_person_external_id pid group by pid.external_id_url order by pid.external_id_url
MULTI_INSTID:select case when count(*)>1 THEN 'error - '||count(*)||' : '||iid.external_id_url end as err_instid from cera2_upd.upd_institute_external_id iid group by iid.external_id_url order by iid.external_id_url
#
# 6. missing person/institute/reference
#MISS_PERSON:select 'error - person_id='||person_id||' (related_unit_id='||related_unit_id||', related_unit_name_id='||related_unit_name_id||', sequence_no='||sequence_no||')'  from related_unit where person_id not in (select person_id from cera2_upd.upd_person) order by person_id
#MISS_INST:select 'error - institute_id='||institute_id||' (related_unit_id='||related_unit_id||', related_unit_name_id='||related_unit_name_id||', sequence_no='||sequence_no||')'  from related_unit where institute_id not in (select institute_id from cera2_upd.upd_institute) order by institute_id
MISS_PERSON:select 'error - person_id='||ru.person_id||' (related_unit_id='||ru.related_unit_id||', related_unit_name_id='||ru.related_unit_name_id||', sequence_no='||ru.sequence_no||') - related_unit_name: Name='''||run.related_unit_name||''' (upd_by='''||run.upd_by||''' on '||run.modification_date||')' from related_unit ru,related_unit_name run where ru.person_id not in (select person_id from cera2_upd.upd_person) and ru.related_unit_name_id = run.related_unit_name_id and run.upd_by not like '%deleted%' order by ru.person_id
MISS_INST:select 'error - institute_id='||ru.person_id||' (related_unit_id='||ru.related_unit_id||', related_unit_name_id='||ru.related_unit_name_id||', sequence_no='||ru.sequence_no||') - related_unit_name: Name='''||run.related_unit_name||''' (upd_by='''||run.upd_by||''' on '||run.modification_date||')' from related_unit ru,related_unit_name run where ru.institute_id not in (select institute_id from cera2_upd.upd_institute) and ru.related_unit_name_id = run.related_unit_name_id and run.upd_by not like '%deleted%' order by ru.institute_id
MISS_REF:select 'error - ref_citation_id='||ref_citation_id||' (citation_id='||citation_id||', ref_type_id='||ref_type_id||')' from reference where ref_citation_id not in (select citation_id from cera2_upd.upd_citation) order by ref_citation_id
#
# 7. identical titles
TITLES:with x as (select c1.title,count(*) as counter from citation c1 group by c1.title order by c1.title) select distinct case when x.counter>1 THEN 'error - '||x.counter||' : '||x.title end as err_id_titles from x
#
# 8. same person/institute multiple times in same list
MULTI_PERSON:with x as (select r1.related_unit_name_id,r1.person_id as creator,'PERSON' as ctype,count(*) as counter from related_unit r1 where r1.institute_id=0 group by r1.related_unit_name_id,r1.person_id order by r1.related_unit_name_id,r1.person_id) select distinct case when x.counter>1 THEN 'error - '||x.counter||' : '||x.related_unit_name_id||', '||x.ctype||', '||x.creator end as err_multperson_list from x
#
MULTI_INST:with x as (select r1.related_unit_name_id,r1.institute_id as creator,'INSTITUTE' as ctype,count(*) as counter from related_unit r1 where r1.person_id=0 group by r1.related_unit_name_id,r1.institute_id order by r1.related_unit_name_id,r1.institute_id) select distinct case when x.counter>1 THEN 'error - '||x.counter||' : '||x.related_unit_name_id||', '||x.ctype||', '||x.creator end as err_multperson_list from x
#
# 9. missing contactPerson list for available creator list and citation entry -> make first author=contact_person?
#HAS_CONTACT:with x as (select c.citation_id,c.title,c.upd_by,case when ru.person_id>0 then ru.person_id when ru.institute_id>0 then ru.institute_id end as first_author,case when ru.person_id>0 then 'PERSON' when ru.institute_id>0 then 'INSTITUTE' end as ctype from list_connect l_cr, citation c, related_unit_name rn, related_unit ru where l_cr.contact_type_id=3000006 and l_cr.citation_id=c.citation_id and l_cr.related_unit_name_id=rn.related_unit_name_id and rn.related_unit_name_id=ru.related_unit_name_id and ru.sequence_no=1 ) select 'contactPerson list missing for citation_id='||x.citation_id||' title:'''||x.title||''' (upd_by='||x.upd_by||') first author id: '||x.first_author||' (type:'||x.ctype||')' from x where x.citation_id not in (select citation_id from list_connect where x.citation_id=citation_id and contact_type_id=3000005) order by x.title
#HAS_CONTACT:with x as (select c.citation_id,c.policy_drs_id,c.title,c.upd_by,case when ru.person_id>0 then ru.person_id when ru.institute_id>0 then ru.institute_id end as first_author,case when ru.person_id>0 then 'PERSON' when ru.institute_id>0 then 'INSTITUTE' end as ctype from list_connect l_cr, citation c, related_unit_name rn, related_unit ru where l_cr.contact_type_id=3000006 and l_cr.citation_id=c.citation_id and l_cr.related_unit_name_id=rn.related_unit_name_id and rn.related_unit_name_id=ru.related_unit_name_id and ru.sequence_no=1) select 'contactPerson list missing for citation_id='||x.citation_id||' title:'''||x.title||''' (upd_by='||x.upd_by||') first author id: '||x.first_author||' (type:'||x.ctype||'; DRS:'||p.drs_map_esgf||')' from x,policy_drs p where x.citation_id not in (select citation_id from list_connect where x.citation_id=citation_id and contact_type_id=3000005) and x.policy_drs_id=p.policy_drs_id order by x.title
HAS_CONTACT:with x as (select c.citation_id,c.policy_drs_id,c.title,c.upd_by,case when ru.person_id>0 then ru.person_id when ru.institute_id>0 then ru.institute_id end as first_author,case when ru.person_id>0 then 'PERSON' when ru.institute_id>0 then 'INSTITUTE' end as ctype from list_connect l_cr, citation c, related_unit_name rn, related_unit ru where l_cr.contact_type_id=3000006 and l_cr.citation_id=c.citation_id and l_cr.related_unit_name_id=rn.related_unit_name_id and rn.related_unit_name_id=ru.related_unit_name_id and ru.sequence_no=1) select 'contactPerson list missing for citation_id='||x.citation_id||' title:'''||x.title||''' (upd_by='||x.upd_by||') first author id:'||x.first_author||', citation manager id:'||up.person_id||' (type:'||x.ctype||'; DRS:'||p.drs_map_esgf||')' from x,policy_drs p, cera2_upd.upd_person up where x.citation_id not in (select citation_id from list_connect where x.citation_id=citation_id and contact_type_id=3000005) and x.policy_drs_id=p.policy_drs_id and ((upper(x.upd_by)=upper(up.email)) or (upper(SUBSTR(x.upd_by, 1 ,INSTR(x.upd_by, '_', 1, 1)-1))=upper(up.first_name) and upper(SUBSTR(x.upd_by, INSTR(x.upd_by,'_', -1, 1)+1))=upper(up.last_name))) order by x.title
# make first author to contact_person
# automated? for LTA?
#
# 10. Display changed/new ORCIDs and institute_ids
CHECK_ORCID:select distinct p.last_name,p.email,pi.PERSON_EXTERNAL_ID,pi.EXTERNAL_ID_URL,pi.upd_date,pi.upd_by from cera2_upd.upd_person_external_id pi,cera2_upd.upd_person p,related_unit r where r.person_id=p.person_id and p.person_id=pi.person_id and pi.upd_by is not NULL order by pi.person_external_id
CHECK_INSTID:select distinct i.institute_name,i.url,ii.institute_EXTERNAL_ID,ii.EXTERNAL_ID_URL,ii.upd_date,ii.upd_by from cera2_upd.upd_institute_external_id ii,cera2_upd.upd_institute i,related_unit r where r.institute_id=i.institute_id and i.institute_id=ii.institute_id and ii.upd_by is not NULL order by ii.institute_external_id
#
# 11. Display addinfos
CHECK_ADDINFOS:select id,name,upload_date,upd_by from cera2_upd.dkrz_add_info2 order by upload_date
#
# 12a. Models without citation entries
MODELS:select m.model_acronym||' (id='||m.model_id||') has no citation entry' from model_connect c, models m where c.model_id(+)=m.model_id and c.model_id is NULL order by m.model_acronym
#
# 12b. Versions without citation entries for input4MIP 
VERSIONS:select d.drs_part||'.'||d.version||' (id='||d.version_id||') has no citation entry' from version_connect c, data_versions d where c.version_id(+)=d.version_id and c.version_id is NULL order by d.drs_part
#
# 13a. Check for completed citations
COMPLETED_CITATIONS: select d.drs_map_esgf,e.external_pid_status,e.external_pid,e.external_pid_url,e.external_id,l.* from policy_drs d,citation c, externalid e, list_connect l where d.project_acronym in ('CMIP6_input4MIPs','IPCC-AR6_CMIP6') and d.policy_drs_id=c.policy_drs_id and c.externalid_id=e.external_id and l.citation_id=c.citation_id and l.contact_type_id=3000006 and e.external_pid_status='initial' order by l.modification_date DESC,d.drs_map_esgf
#
# 13b. completed citations with DOI without cera2.citation entry
DOI_REF:select d.drs_map_esgf,d.ESGF_ACCESS_LINK,e.external_pid_status,e.external_pid,e.external_pid_url,e.external_id,l.*,cc.title,cc.access_spec from policy_drs d,citation c, externalid e, list_connect l, cera2.citation cc where d.project_acronym in ('CMIP6_input4MIPs','IPCC-AR6_CMIP6') and e.external_pid_status='registered' and (e.external_pid like '10.22033/%' or e.external_pid like '10.5072/%') and d.policy_drs_id=c.policy_drs_id and c.externalid_id=e.external_id and l.citation_id=c.citation_id and l.contact_type_id=3000006 and  cc.access_spec like '%'||e.external_pid(+) and cc.citation_id is NULL order by l.modification_date DESC,d.drs_map_esgf
# 13c. Data not accessible for completed citations with DOI
# get all links -> translate into searchAPI request and count(*)>0
DOI_ESGF:select d.drs_map_esgf,d.ESGF_ACCESS_LINK,e.external_pid_status,e.external_pid,e.external_pid_url,e.external_id,l.* from policy_drs d,citation c, externalid e, list_connect l where d.project_acronym in ('CMIP6_input4MIPs','IPCC-AR6_CMIP6') and e.external_pid_status='registered' and (e.external_pid like '10.22033/%' or e.external_pid like '10.5072/%') and d.policy_drs_id=c.policy_drs_id and c.externalid_id=e.external_id and l.citation_id=c.citation_id and l.contact_type_id=3000006  order by l.modification_date DESC,d.drs_map_esgf
# 13d. Data accessible for incomplete citations on coarse granularity
# get all links -> translate into searchAPI request and count(*)>0
NODOI_ESGF:select d.drs_map_esgf,d.ESGF_ACCESS_LINK,e.external_pid_status,e.external_pid,e.external_pid_url,e.external_id from policy_drs d,citation c, externalid e where d.project_acronym in ('CMIP6_input4MIPs','IPCC-AR6_CMIP6') and REGEXP_COUNT(d.drs_map_esgf, '\.') = 3 and e.external_pid_status='initial' and (e.external_pid like '10.22033/%' or e.external_pid like '10.5072/%') and d.policy_drs_id=c.policy_drs_id and c.externalid_id=e.external_id and c.citation_id not in (select citation_id from list_connect where contact_type_id=3000006) order by d.drs_map_esgf
#
# 14. Checks for changed MD as in create_xml -> not required any longer because of cron job
#
# 15. New cera2_upd entriescitations
NEW_UPDCITATIONS:select title,trim(access_spec),access_spec,upd_date,upd_by from cera2_upd.upd_citation where upd_by is not NULL
##NEW_ORCID:select * from cera2_upd.upd_person_external_id where upd_by is not NULL
##NEW_INSTID:select * from cera2_upd.upd_institute_external_id where upd_by is not NULL
#
# 16. Exp without creators but model/MIP has registered DOI
#
EXP_ADD_CREATORS:select distinct pe.drs_map_esgf from citation cm, list_connect lm,policy_drs pm, externalid em, policy_drs pe,citation ce, externalid ee where REGEXP_COUNT(pm.drs_map_esgf, '\.') = 3 and pm.policy_drs_id=cm.policy_drs_id and cm.externalid_id=em.external_id and em.external_pid_status='registered' and lm.citation_id=cm.citation_id and REGEXP_COUNT(pe.drs_map_esgf, '\.') = 4 and pe.drs_map_esgf like pm.drs_map_esgf||'.%' and pe.policy_drs_id=ce.policy_drs_id and ce.externalid_id=ee.external_id and ce.citation_id not in (select citation_id from list_connect where contact_type_id=3000006) order by pe.drs_map_esgf
#
# 17. deleted lists or list of length zero of persons or institutes
#
#select * from related_unit_name run
#where run.related_unit_name_id not in (select ru.related_unit_name_id from related_unit ru);
#DEL_LIST:select l.citation_id,l.related_unit_name_id,l.contact_type_id,l.upd_by,run.related_unit_name from list_connect l,related_unit_name run where run.upd_by like '%deleted' and run.related_unit_name_id=l.related_unit_name_id
DEL_OR_ZEROLENGTH_LIST:select l.citation_id,l.related_unit_name_id,l.contact_type_id,l.upd_by,run.related_unit_name from list_connect l,related_unit_name run where (run.upd_by like '%deleted'  or run.related_unit_name_id not in (select ru.related_unit_name_id from related_unit ru)) and run.related_unit_name_id=l.related_unit_name_id
#
# 18. deleted authors for doi data
#
DOI_NO_AUTHORS:select c.citation_id,p.drs_map_esgf,c.upd_by from citation c, externalid e, policy_drs p where F_AUTHORS(c.citation_id) is NULL and c.externalid_id=e.external_id and e.external_pid_status='registered' and c.policy_drs_id=p.policy_drs_id
